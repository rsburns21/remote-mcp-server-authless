name: Deploy MCP and Search Workers

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # Support either CF_API_TOKEN or CLOUDFLARE_API_KEY
      CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN || secrets.CLOUDFLARE_API_KEY }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Wrangler
        run: npm i -g wrangler@3

      - name: Seed production secret(s)
        run: |
          echo -n "$SUPABASE_SERVICE_ROLE_KEY" | wrangler secret put SUPABASE_SERVICE_ROLE_KEY --env production --yes -c wrangler-mcp.toml
          echo -n "$SUPABASE_SERVICE_ROLE_KEY" | wrangler secret put SUPABASE_SERVICE_ROLE_KEY --env production --yes -c wrangler-search.toml

      - name: Deploy MCP worker
        run: wrangler deploy --env production -c wrangler-mcp.toml --minify

      - name: Deploy Search worker
        run: wrangler deploy --env production -c wrangler-search.toml --minify

      - name: Smoke test MCP worker
        run: |
          set -e
          curl -sS https://burns-legal-mcp-202508182039.rburns-fresno.workers.dev/healthz || true

      - name: Smoke test Search worker
        run: |
          set -e
          curl -sS https://burns-legal-enhanced-authless.rburns-fresno.workers.dev/healthz || true

name: Deploy Burns Legal Enhanced MCP

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - development

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Workers
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm ci
        
      # Skip TypeScript build - Cloudflare handles compilation
      # - name: Build TypeScript
      #   run: npm run build
        
      - name: Deploy to Cloudflare
        uses: cloudflare/wrangler-action@v3
        env:
          CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }}
          CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
          CLOUDFLARE_WORKER_NAME: burns-legal-enhanced-authless
        with:
          wranglerVersion: '3.80.5'
          apiToken: false
          command: deploy --config wrangler.enhanced.toml --name burns-legal-enhanced-authless
      
      - name: Set Worker Secrets
        if: success()
        uses: cloudflare/wrangler-action@v3
        env:
          CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }}
          CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        with:
          wranglerVersion: '3.80.5'
          apiToken: false
          command: secret put SUPABASE_SERVICE_ROLE_KEY --config wrangler.enhanced.toml
          secrets: |
            SUPABASE_SERVICE_ROLE_KEY
          
      - name: Create deployment record
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref,
              environment: '${{ inputs.environment || 'production' }}',
              production_environment: '${{ inputs.environment == 'production' }}',
              description: 'Burns Legal Enhanced MCP v1.0',
              required_contexts: [],
              auto_merge: false
            });
            
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: 'success',
              environment_url: 'https://burns-legal-enhanced-authless.rburns-fresno.workers.dev',
              description: 'Deployment successful'
            });
            
      - name: Test deployment
        run: |
          sleep 10
          curl -f https://burns-legal-enhanced-authless.rburns-fresno.workers.dev/health || exit 1
          
      - name: Tag stable release
        if: github.ref == 'refs/heads/main' && success()
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          git tag -a "deploy-$TIMESTAMP" -m "Automated deployment at $TIMESTAMP"
          git push origin "deploy-$TIMESTAMP"